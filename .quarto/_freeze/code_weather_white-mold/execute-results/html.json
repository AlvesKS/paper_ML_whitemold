{
  "hash": "eca0ab3e797f14bc32d39d721973f91d",
  "result": {
    "markdown": "---\ntitle: Weather data\n---\n\n## Packages\n\n::: {.callout-warning}\n\n# About R packages\n\nMake sure to have all R packages installed before running the analysis described in this website.\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(cowplot)\nlibrary(patchwork)\nlibrary(raster)\nlibrary(spatstat)\nlibrary(KrigR)\nlibrary(lubridate)\nlibrary(sf)\nlibrary(viridis)\nlibrary(ggthemes)\nlibrary(terra)\nlibrary(MetBrewer)\n```\n:::\n\n## White mold data\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_data = read.csv(\"data_white-mold/WhiteMoldSurveyWrangledData.csv\")\n```\n:::\n\n### Removing missing coordinates\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_data2 = wm_data %>% \n  filter(!is.na(latitude))  \n```\n:::\n\n### Names of the counties in the dataset\n\n::: {.cell}\n\n```{.r .cell-code}\ncounties = unique(wm_data2$county)\ncounties\n```\n\n::: {.cell-output-stdout}\n```\n[1] \"Genesee\"    \"Niagara\"    \"Orleans\"    \"Livingston\" \"Wyoming\"   \n[6] \"Ontario\"    \"Yates\"      \"Chautauqua\" \"Monroe\"    \n```\n:::\n\n```{.r .cell-code}\ncentral_ny = c(\"wyoming\", \"livingston\",\"ontario\",\"yates\")\n```\n:::\n\n### Ploting the location of each field\n\n::: {.cell}\n\n```{.r .cell-code}\n#covert the names to lowercase\nmap_snap_fun = function(yearr){\ncounties_lc = tolower(counties)\n\nny_map_data = map_data('county', region = 'new york')\n\nsnap_map = ny_map_data %>% \n  filter(subregion %in% counties_lc) %>%\n  mutate(region2 = case_when(subregion %in% central_ny ~ \"Central lakes\",\n                            !subregion %in% central_ny ~ \"Great lakes\")) %>% \n  ggplot()+\n  geom_polygon(data = ny_map_data,\n               aes(x=long, y = lat, group = group),\n               fill= \"white\",\n               color = \"black\",\n               size =0.3)+\n  geom_polygon(aes(x=long, y = lat, group = group, fill=region2),\n               # fill= \"gray90\",\n               color = \"black\",\n               size =0.3)+\n  geom_point(data = wm_data2 %>% \n               group_by(subject) %>% \n               filter(dap == max(dap),\n                       !is.na(wm)) %>%\n               ungroup() %>% \n               filter(year == yearr)  , \n                size = 0.4,\n             aes(longitude,latitude, color = wm>0))+\n  coord_map(xlim = c(-80,-76.7),\n            ylim = c(41.8, 43.5))+\n  scale_fill_brewer(palette = \"Greens\")+\n  scale_color_colorblind(labels = c(\"Not-present\", \"Present\"))+\n  guides(color = guide_legend(override.aes = list(size=2)),\n         fill = \"none\")+\n  theme_minimal()+\n  labs(x = \"Longitude\",\n       y = \"Latitude\",\n       fill = \"Climate division\",\n       color = \"White mold\",\n       title = paste(yearr))+\n  # facet_wrap(~year, ncol = 1)+\n  theme(legend.position = \"right\",\n        legend.text = element_text(size=7),\n        axis.title = element_text(size=7),\n        axis.text = element_text(size=7),\n        plot.title = element_text(size=10))\nsnap_map\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nny_map_data = map_data('county', region = 'new york')\ncounties_lc = tolower(counties)\nny_map = ny_map_data %>% \n  filter(subregion %in% counties_lc) %>% \n  mutate(region2 = case_when(subregion %in% central_ny ~ \"Central lakes\",\n                            !subregion %in% central_ny ~ \"Great lakes\")) %>% \n  ggplot()+\n  geom_polygon(data = ny_map_data,\n               aes(x=long, y = lat, group = group),\n               fill= \"white\",\n               color = \"black\",\n               size =0.3)+\n  geom_polygon(aes(x=long, y = lat, group = group, fill=region2),\n               # fill= \"gray90\",\n               color = \"black\",\n               size =0.3)+\n  annotate(\"rect\", xmin = -80, xmax = -76.5,\n                   ymin = 41.8, ymax = 43.5,color = \"black\", alpha = 0)+\n  # coord_map(xlim = c(-80,-73),\n            # ylim = c(40, 45))+\n  coord_map()+\n   scale_fill_brewer(palette = \"Greens\")+\n  theme_void()+\n  labs(x = \"Longitude\",\n       y = \"Latitude\",\n       fill = \"Climate division\")+\n  theme(legend.position = c(0.1,0.8))\nny_map\n```\n\n::: {.cell-output-display}\n![](code_weather_white-mold_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n  (map_snap_fun(yearr = \"2006\") +\n   map_snap_fun(yearr = \"2007\")+\n   map_snap_fun(yearr = \"2008\")+plot_layout(ncol = 2, guides = 'collect')&\n     theme(legend.position = \"bottom\",\n           legend.justification = c(\"left\",\"center\"))) +\n  (ny_map+plot_layout(guides = 'keep')) +\n\n  # plot_layout(ncol = 2)+\n  plot_annotation(tag_levels = \"A\")&\n  theme(legend.text = element_text(size=6),\n        legend.title = element_text(size=8),\n        legend.key.size = unit(0.4, 'cm'))\n```\n\n::: {.cell-output-display}\n![](code_weather_white-mold_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\"figs/maps/maps_fields.png\", dpi= 900, height = 6, width = 7, bg = \"white\")\n```\n:::\n\n## [ERA5](https://confluence.ecmwf.int/display/CKB/The+family+of+ERA5+datasets)\n\n-   ERA5-Land hourly data from 1950 to present [Description](https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land?tab=overview)\n\n    -   0.1° x 0.1°; Native resolution is 9 km\n\n    -   Global\n\n    -   Hourly\n\n    -   January 1950 to present\n\n-   ERA5 hourly data on pressure levels from 1979 to present [Description](https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-pressure-levels?tab=overview)\n\n    -   Reanalysis: 0.25° x 0.25°\n\n    -   Global\n\n    -   Hourly\n\n    -   1979 to present\n\n-   Agrometeorological indicators from 1979 to present derived from reanalysis [Description](https://cds.climate.copernicus.eu/cdsapp#!/dataset/sis-agrometeorological-indicators?tab=overview)\n\n    -   0.1° x 0.1°\n\n    -   Global\n\n    -   Daily\n\n    -   1979 to present\n\n-   There is a package for downloading the data using R: [link](https://bluegreen-labs.github.io/ecmwfr/)\n\n# ERA5-Land hourly data from 1950 to present\n\nBesides there is a package for downloading data from Era5, I chose using their website to download the data. The process, using their website or the R pakage require making a request and waiting a long time to get the data.\n\nThese are the codes for each variable inside the `NETCDF` files.\n\n-   `u10`, `d2m`, `t2m`, `lai_hv`, `lai_lv`, `src`, `skt`, `stl2`, `sp`, `tp`, `swvl1`, `swvl2`, `swvl3`, `swvl4`\n\nFor now, we are going to use only these variables:\n\n-   `t2m`: 2m temperature\n-   `d2m`: 2m dew point temperature\n-   `sp`: Surface pressure\n-   `swvl1`: Soil moisture\n-   `stl1`: Soil temperature\n\n> Relative humidity can be calculated from t2m, d2m, and sp.\n\n## Importing data\n\nHere I load the data for each data variable and gather into a single raster object.\n\n### 2m temperature\n\n<!-- ```{r eval=FALSE, include=FALSE} -->\n\n<!-- t2m_2006 <- raster::stack(\"data_era5/era5_NY_2006.nc\", varname = \"t2m\") -->\n\n<!-- t2m_2007 <- raster::stack(\"data_era5/era5_NY_2007.nc\", varname = \"t2m\") -->\n\n<!-- t2m_2008 <- raster::stack(\"data_era5/era5_NY_2008.nc\", varname = \"t2m\") -->\n\n<!-- t2m_all = stack(t2m_2006, t2m_2007, t2m_2008) -->\n\n<!-- ``` -->\n\n::: {.cell}\n\n```{.r .cell-code}\nt2m_all = raster::stack(\"data_era5/era5_NY_2006-2008.nc\", varname = \"t2m\")\n```\n:::\n\n### 2m dewpoint temperature\n\n<!-- ```{r eval=FALSE, include=FALSE} -->\n\n<!-- d2m_2006 <- raster::stack(\"data_era5/era5_NY_2006.nc\", varname = \"d2m\") -->\n\n<!-- d2m_2007 <- raster::stack(\"data_era5/era5_NY_2007.nc\", varname = \"d2m\") -->\n\n<!-- d2m_2008 <- raster::stack(\"data_era5/era5_NY_2008.nc\", varname = \"d2m\") -->\n\n<!-- d2m_all = stack(d2m_2006, d2m_2007, d2m_2008) -->\n\n<!-- ``` -->\n\n::: {.cell}\n\n```{.r .cell-code}\nd2m_all = raster::stack(\"data_era5/era5_NY_2006-2008.nc\", varname = \"d2m\")\n```\n:::\n\n### Surface pressure\n\n<!-- ```{r eval=FALSE, include=FALSE} -->\n\n<!-- sp_2006 <- raster::stack(\"data_era5/era5_NY_2006.nc\", varname = \"sp\") -->\n\n<!-- sp_2007 <- raster::stack(\"data_era5/era5_NY_2007.nc\", varname = \"sp\") -->\n\n<!-- sp_2008 <- raster::stack(\"data_era5/era5_NY_2008.nc\", varname = \"sp\") -->\n\n<!-- sp_all = stack(sp_2006, sp_2007, sp_2008) -->\n\n<!-- ``` -->\n\n::: {.cell}\n\n```{.r .cell-code}\nsp_all = raster::stack(\"data_era5/era5_NY_2006-2008.nc\", varname = \"sp\")\n```\n:::\n\n### soil moisture\n\n<!-- ```{r eval=FALSE, include=FALSE} -->\n\n<!-- swvl1_2006 <- raster::stack(\"data_era5/era5_NY_2006.nc\", varname = \"swvl1\") -->\n\n<!-- swvl1_2007 <- raster::stack(\"data_era5/era5_NY_2007.nc\", varname = \"swvl1\") -->\n\n<!-- swvl1_2008 <- raster::stack(\"data_era5/era5_NY_2008.nc\", varname = \"swvl1\") -->\n\n<!-- swvl1_all = stack(swvl1_2006, swvl1_2007, swvl1_2008) -->\n\n<!-- ``` -->\n\n::: {.cell}\n\n```{.r .cell-code}\nswvl1_all = raster::stack(\"data_era5/era5_NY_2006-2008.nc\", varname = \"swvl1\")\n```\n:::\n\n### soil temperature\n\n::: {.cell}\n\n```{.r .cell-code}\nstl1_all = raster::stack(\"data_era5/era5_NY_2006-2008_2.nc\", varname = \"stl1\")\n```\n:::\n\n## Kringing Test\n\nKriniging was performed following this [tutorial](https://www.erikkusch.com/post/krigr-mats/krigrworkshop/#kriging-by-shapefile)\n\n### Weather data\n\nHere I load the temperature data, select one layer (time and day) and plot it together with the New York map\n\n::: {.cell}\n\n```{.r .cell-code}\nr <- raster::stack(\"data_era5/era5_NY_2006-2008.nc\", varname = \"t2m\")\na = r$X2008.05.01.00.00.00\nraster::plot(a)\npoints(wm_data2$longitude, wm_data2$latitude)\nmaps::map('county', region = 'new york', col = \"#5E610B\", add = TRUE)\n```\n\n::: {.cell-output-display}\n![](code_weather_white-mold_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n### NY shapefile\n\nWe will need the New York shapefile to download the digital elevation map, which should be used for kriging. I also filter only the counties that have been surveyed for white mold.\n\n::: {.cell}\n\n```{.r .cell-code}\nDir.StateShp <- file.path(\"data_era5/test\")# file.path(\"shape_files/nc_files\")\n\n ny_shape1 = readOGR(\"shape_files/cugir-007865/cugir-007865/cty036.shp\")\n```\n\n::: {.cell-output-stdout}\n```\nOGR data source with driver: ESRI Shapefile \nSource: \"G:\\.shortcut-targets-by-id\\1tp3HzkoBOZ0949rE6UQ-y3_WEWrnsmPw\\WhiteMoldSurvey\\01-Kaique\\01-Repository\\shape_files\\cugir-007865\\cugir-007865\\cty036.shp\", layer: \"cty036\"\nwith 67 features\nIt has 80 fields\n```\n:::\n\n```{.r .cell-code}\n ny_shape = ny_shape1[ny_shape1$NAME %in% c(unique(wm_data2$county)\n                                            # \"Yates\", \"Steuben\",\"Allegany\", \"Cattaraugus\",\"Erie\"\n                                            ),] \n\nplot(ny_shape)\npoints(wm_data2$longitude, wm_data2$latitude,pch = 19)\n```\n\n::: {.cell-output-display}\n![](code_weather_white-mold_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n### Masking\n\nHere we make make a mask to filter only the data for the selected counties.\n\nThe `KrigR::mask_Shape()` function is diferent from the `raster::mask()`. The `KrigR::mask_Shape()` create a new raster object with all cells in the original raster which are at least partially covered by the supplied shapefile. The `raster::mask()` removes the cells that are partially covered by the shapefile.\n\nNote that the `KrigR::mask_Shape()` returns a raster filled with `1` (`a11`). So I transform that raster to a polygon object (`a21`) and use it as shapefile to mask all the datasets from now on.\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a raster covering the selected counties. Note that all cells has the value 1\na11 = mask_Shape(a, ny_shape)\n\n# create a polygon from the previous raster file (this is going to be our mask fot the all datasets) \na21 = rasterToPolygons(a11, dissolve=T)\n```\n\n::: {.cell-output-stderr}\n```\nLoading required namespace: rgeos\n```\n:::\n\n::: {.cell-output-stderr}\n```\nWarning in rasterToPolygons(a11, dissolve = T): package rgeos is not available.\nCannot dissolve\n```\n:::\n\n```{.r .cell-code}\n# Mask our example dataset\na2 = mask(a,a21)\n\npar(mfrow=c(1,3))\nplot(a11, main = \"NULL raster file\")\nplot(a21, main = \"Mask\")\nplot(a2, main = \"Masked raster data\")\n```\n\n::: {.cell-output-display}\n![](code_weather_white-mold_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nori_data_df = as.data.frame(a2, xy = T) \ncolnames(ori_data_df)[3] <- \"values\"\nori_g= ori_data_df %>% \n  filter(!is.na(values)) %>% \n  ggplot()+\n  geom_tile(aes(x, y, fill = values))+\n  geom_polygon(data = ny_shape1,\n              aes(x=long, y = lat, group = group),\n               fill= NA,\n               color = \"black\")+\n  scale_fill_viridis(option=\"B\")+\n  coord_map(xlim = c(-80,-76.8), ylim = c(41.8,43.5))+\n  geom_point(data = wm_data2,\n             shape = 21,\n             color = \"white\",\n             fill = \"black\", \n             aes(longitude,latitude))+\n  labs(x = \"Longitude\",\n       y = \"Latitude\",\n       title= \"Era5 original\")+\n  theme_minimal()\n```\n\n::: {.cell-output-stderr}\n```\nRegions defined for each Polygons\n```\n:::\n\n```{.r .cell-code}\nori_g\n```\n\n::: {.cell-output-display}\n![](code_weather_white-mold_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n### Downloading Digital elevation model (DEM)\n\nFunction to plot the DEM\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"functions/Plot_Covs.R\")\n```\n:::\n\nDownloading DEM\n\n::: {.cell}\n\n```{.r .cell-code}\nCovs_ls <- download_DEM(\n  Train_ras = a2,\n  Target_res = .02,\n  Shape = ny_shape,\n  Dir = Dir.StateShp,\n  Keep_Temporary = TRUE\n)\n\nPlot_Covs(Covs_ls)\n```\n\n::: {.cell-output-display}\n![](code_weather_white-mold_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n##### Visualization\n\n...Using `ggplot2`\n\n::: {.cell}\n\n```{.r .cell-code}\nas.data.frame(Covs_ls[[2]], xy = T) %>%\n  filter(!is.na(DEM)) %>% \n  ggplot() +\n  geom_tile(aes(x,y,fill = DEM))+\n  geom_polygon(data = ny_shape1,\n              aes(x=long, y = lat, group = group),\n               fill= NA,\n               color = \"black\")+\n   geom_point(data = wm_data2, size = 0.1,\n             aes(longitude,latitude))+\n  scale_fill_gradientn(colors=met.brewer(\"Homer2\", direction = -1))+\n  coord_map(xlim = c(-80,-76.8), ylim = c(41.8,43.5))+\n  labs(x = \"Longitude\",\n       y = \"Latitude\",\n       title= \"Era5 original\")+\n  theme_void()+\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-stderr}\n```\nRegions defined for each Polygons\n```\n:::\n\n::: {.cell-output-display}\n![](code_weather_white-mold_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\"figs/maps/elevation.png\", dpi = 600, height = 5, width = 7, bg = \"white\")\n```\n:::\n\n### Kringing\n\nThis function performs kriging of the weather variables as function of the DEM data\n\n::: {.cell}\n\n```{.r .cell-code}\nKrigStart <- Sys.time() \n\nState_Krig <- krigR(\n  Data = a2, # what to krig\n  Covariates_coarse = Covs_ls[[1]], # covariates at training resolution\n  Covariates_fine = Covs_ls[[2]], # covariates at target resolution\n  Keep_Temporary = FALSE, # delete temporary krigs of layers\n  Cores = 1, # only run this on 1 core\n  FileName = \"State_Shape.nc\", # save the finished file as this _t2m_2008.nc\n  Dir = Dir.StateShp # where to save the output\n)\n```\n\n::: {.cell-output-stderr}\n```\nCommencing Kriging\n```\n:::\n\n::: {.cell-output-stderr}\n```\nKriging of remaining 0 data layers should finish around: 2022-06-22 17:24:26\n```\n:::\n\n::: {.cell-output-stdout}\n```\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n\n```{.r .cell-code}\nKrigStop <- Sys.time() \nKrigStop-KrigStart\n```\n\n::: {.cell-output-stdout}\n```\nTime difference of 2.086116 secs\n```\n:::\n\n```{.r .cell-code}\nplot(State_Krig$Kriging_SE)\n```\n\n::: {.cell-output-display}\n![](code_weather_white-mold_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n### Visualization\n\n::: {.cell}\n\n```{.r .cell-code}\nKrigs = State_Krig$Kriging_Output\n# Krigs = State_Krig$Kriging_SE\nKrig_df <- as.data.frame(Krigs[[1]], xy = TRUE)\ncolnames(Krig_df)[3] <- \"values\"\n\n\n\nkrig_g = Krig_df %>% \n  filter(!is.na(values)) %>% \n  ggplot()+\n  geom_tile(aes(x, y, fill = values))+\n  geom_polygon(data = ny_shape1,\n              aes(x=long, y = lat, group = group),\n               fill= NA,\n               color = \"black\")+\n  scale_fill_viridis(option=\"B\")+\n  # scale_color_viridis(option=\"B\")+\n  geom_point(data = wm_data2,\n             shape = 21,\n             color = \"white\",\n             fill = \"black\",\n             aes(longitude,latitude))+\n  coord_map()+\n  labs(x = \"Longitude\",\n       y = \"Latitude\",\n       title= \"Era5 kriged\")\n```\n\n::: {.cell-output-stderr}\n```\nRegions defined for each Polygons\n```\n:::\n\n```{.r .cell-code}\nori_g + krig_g +\n  plot_layout(ncol = 1) &\ncoord_map(xlim = c(-80,-76.8), ylim = c(41.8,43.5))&\ntheme_minimal()\n```\n\n::: {.cell-output-stderr}\n```\nCoordinate system already present. Adding new coordinate system, which will replace the existing one.\n```\n:::\n\n::: {.cell-output-stderr}\n```\nCoordinate system already present. Adding new coordinate system, which will replace the existing one.\n```\n:::\n\n::: {.cell-output-display}\n![](code_weather_white-mold_files/figure-html/unnamed-chunk-21-1.png){width=576}\n:::\n:::\n\n## Daily summaries\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(1,3))\nplot(mean(t2m_all[[1:24]]))\nmaps::map('county', region = 'new york', col = \"#5E610B\", add = TRUE)\nplot(min(t2m_all[[1:24]]))\nmaps::map('county', region = 'new york', col = \"#5E610B\", add = TRUE)\nplot(max(t2m_all[[1:24]]))\nmaps::map('county', region = 'new york', col = \"#5E610B\", add = TRUE)\n```\n\n::: {.cell-output-display}\n![](code_weather_white-mold_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# days_in_month(month)\nyear = 2006:2008\nmonth = 4:10\nday = 01:31\nhour = as.numeric(seq(0,23,1))\ndata_era5 = expand_grid(year, month, day) %>% \n  dplyr::filter(month != 4 | day != 31,\n         month != 6 | day != 31,\n         month != 9 | day != 31)%>% \n  unite(date, year, month, day,sep=\"-\",remove = F ) %>% \n  mutate(date = as.Date(date))\n```\n:::\n\nFunction for calculating the summaries\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_raster = function(i, stack_obj){\n  mean(stack_obj[[i:(i+23)]])\n}\nmin_raster = function(i, stack_obj){\n  min(stack_obj[[i:(i+23)]])\n}\nmax_raster = function(i, stack_obj){\n  max(stack_obj[[i:(i+23)]])\n}\n```\n:::\n\n### Lapply\n\n::: {.cell}\n\n```{.r .cell-code}\ndays_i = seq(1,length(data_era5$day)*24,by = 24)\ntime_start = Sys.time()\n\n# dew point\naa1 = lapply(days_i, mean_raster, stack_obj= d2m_all)\nd2m_mean_daily_stack = mask(stack(aa1), a21)\nwriteCDF(rast(d2m_mean_daily_stack),\n         \"data_era5/daily_summaries/d2m_mean_daily.nc\",\n         overwrite=TRUE)\n# temperature\n### mean\naa2 = lapply(days_i, mean_raster, stack_obj= t2m_all)\nt2m_mean_daily_stack = mask(stack(aa2), a21)\nwriteCDF(rast(t2m_mean_daily_stack),\n         \"data_era5/daily_summaries/t2m_mean_daily.nc\",\n         overwrite=TRUE)\n### minimum\naa3 = lapply(days_i, min_raster, stack_obj= t2m_all)\nt2m_min_daily_stack = mask(stack(aa3), a21)\nwriteCDF(rast(t2m_min_daily_stack),\n         \"data_era5/daily_summaries/t2m_min_daily.nc\",\n         overwrite=TRUE)\n### maximum\naa4 = lapply(days_i, max_raster, stack_obj= t2m_all)\nt2m_max_daily_stack = mask(stack(aa4), a21)\nwriteCDF(rast(t2m_max_daily_stack),\n         \"data_era5/daily_summaries/t2m_max_daily.nc\",\n         overwrite=TRUE)\n\n\n# Surface pressure\naa5 = lapply(days_i, mean_raster, stack_obj= sp_all)\nsp_mean_daily_stack = mask(stack(aa5), a21)\nwriteCDF(rast(sp_mean_daily_stack),\n         \"data_era5/daily_summaries/sp_mean_daily.nc\",\n         overwrite=TRUE)\n\n# Soil moisture\naa6 = lapply(days_i, mean_raster, stack_obj= swvl1_all)\nswvl1_mean_daily_stack = mask(stack(aa6), a21)\nwriteCDF(rast(swvl1_mean_daily_stack),\n         \"data_era5/daily_summaries/swvl1_mean_daily.nc\",\n         overwrite=TRUE)\n\n# soil temperature\naa7 = lapply(days_i, mean_raster, stack_obj= stl1_all)\nstl1_mean_daily_stack = mask(stack(aa7), a21)\nwriteCDF(rast(stl1_mean_daily_stack),\n         \"data_era5/daily_summaries/stl1_mean_daily.nc\",\n         overwrite=TRUE)\n\ntime_end = Sys.time()\ntime_end -time_start\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(stl1_mean_daily_stack$X1)\nmaps::map('county', region = 'new york',  add = TRUE)\n```\n\n::: {.cell-output-display}\n![](code_weather_white-mold_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n### Download DEM\n\n::: {.cell}\n\n```{.r .cell-code}\nDir.krigd_var <- file.path(\"data_era5/kriged\")\nCovs_ls <- download_DEM(\n  Train_ras = d2m_mean_daily_stack,\n  Target_res = .02,\n  Shape = ny_shape,\n  Dir = Dir.krigd_var,\n  Keep_Temporary = TRUE\n)\n\nPlot_Covs(Covs_ls)\n```\n\n::: {.cell-output-display}\n![](code_weather_white-mold_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n### Kriging the daily summaries\n\n#### Dew point\n\n::: {.cell}\n\n```{.r .cell-code}\n# time_start =Sys.time()\n\nd2m_mean_daily_Krig <- krigR(\n  Data = d2m_mean_daily_stack, # what to krig\n  Covariates_coarse = Covs_ls[[1]], # covariates at training resolution\n  Covariates_fine = Covs_ls[[2]], # covariates at target resolution\n  Keep_Temporary = FALSE, # delete temporary krigs of layers\n  Cores = 8, # only run this on 1 core\n  FileName = \"d2m_mean_daily_krig.nc\", # save the finished file as this\n  Dir = Dir.krigd_var # where to save the output\n)\n```\n:::\n\n#### Mean Temeperature\n\n::: {.cell}\n\n```{.r .cell-code}\nt2m_mean_daily_Krig <- krigR(\n  Data = t2m_mean_daily_stack, # what to krig\n  Covariates_coarse = Covs_ls[[1]], # covariates at training resolution\n  Covariates_fine = Covs_ls[[2]], # covariates at target resolution\n  Keep_Temporary = FALSE, # delete temporary krigs of layers\n  Cores = 8, # only run this on 1 core\n  FileName = \"t2m_mean_daily_Krig.nc\", # save the finished file as this\n  Dir = Dir.krigd_var # where to save the output\n)\n```\n:::\n\n#### Minimum temperature\n\n::: {.cell}\n\n```{.r .cell-code}\nt2m_min_daily_Krig <- krigR(\n  Data = t2m_min_daily_stack, # what to krig\n  Covariates_coarse = Covs_ls[[1]], # covariates at training resolution\n  Covariates_fine = Covs_ls[[2]], # covariates at target resolution\n  Keep_Temporary = FALSE, # delete temporary krigs of layers\n  Cores = 8, # only run this on 1 core\n  FileName = \"t2m_min_daily_Krig.nc\", # save the finished file as this\n  Dir = Dir.krigd_var # where to save the output\n)\n```\n:::\n\n#### Maximum temperature\n\n::: {.cell}\n\n```{.r .cell-code}\nt2m_max_daily_Krig <- krigR(\n  Data = t2m_max_daily_stack, # what to krig\n  Covariates_coarse = Covs_ls[[1]], # covariates at training resolution\n  Covariates_fine = Covs_ls[[2]], # covariates at target resolution\n  Keep_Temporary = FALSE, # delete temporary krigs of layers\n  Cores = 8, # only run this on 1 core\n  FileName = \"t2m_max_daily_Krig.nc\", # save the finished file as this\n  Dir = Dir.krigd_var # where to save the output\n)\n```\n:::\n\n#### Surface pressure\n\n::: {.cell}\n\n```{.r .cell-code}\nsp_mean_daily_Krig <- krigR(\n  Data = sp_mean_daily_stack, # what to krig\n  Covariates_coarse = Covs_ls[[1]], # covariates at training resolution\n  Covariates_fine = Covs_ls[[2]], # covariates at target resolution\n  Keep_Temporary = FALSE, # delete temporary krigs of layers\n  Cores = 8, # only run this on 1 core\n  FileName = \"sp_mean_daily_Krig.nc\", # save the finished file as this\n  Dir = Dir.krigd_var # where to save the output\n)\n```\n:::\n\n#### Soil temperature\n\n::: {.cell}\n\n```{.r .cell-code}\nstl1_mean_daily_Krig <- krigR(\n  Data = stl1_mean_daily_stack, # what to krig\n  Covariates_coarse = Covs_ls[[1]], # covariates at training resolution\n  Covariates_fine = Covs_ls[[2]], # covariates at target resolution\n  Keep_Temporary = FALSE, # delete temporary krigs of layers\n  Cores = 8, # only run this on 1 core\n  FileName = \"stl1_mean_daily_Krig.nc\", # save the finished file as this\n  Dir = Dir.krigd_var # where to save the output\n)\n# time_end = Sys.time()\n# time_end -time_start\n```\n:::\n\n#### Soil moisture\n\n::: {.cell}\n\n```{.r .cell-code}\nswvl1_mean_daily_Krig <- krigR(\n  Data = swvl1_mean_daily_stack, # what to krig\n  Covariates_coarse = Covs_ls[[1]], # covariates at training resolution\n  Covariates_fine = Covs_ls[[2]], # covariates at target resolution\n  Keep_Temporary = FALSE, # delete temporary krigs of layers\n  Cores = 8, # only run this on 1 core\n  FileName = \"swvl1_mean_daily_Krig.nc\", # save the finished file as this\n  Dir = Dir.krigd_var # where to save the output\n)\n# time_end = Sys.time()\n# time_end -time_start\n\nplot(swvl1_mean_daily_Krig$Kriging_SE$var1.stdev.1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkrigR_temporal = function(i, data){\ncov1 = stl1_mean_daily_stack[[i]]\nnames(cov1) = c(\"soilT\")\n\ncov2 = stl1_mean_daily_Krig$Kriging_Output[[i]]\nnames(cov2) = c(\"soilT\")\nCovs_ls2 = list(cov1, cov2)\n\ndatax = crop(swvl1_mean_daily_stack[[i]],a21)\n\nxxxx <- krigR(\n  Data = data[[i]], # what to krig\n  Covariates_coarse = Covs_ls2[[1]], # covariates at training resolution\n  Covariates_fine = Covs_ls2[[2]], # covariates at target resolution\n  Keep_Temporary = FALSE, # delete temporary krigs of layers\n  KrigingEquation = \"ERA ~ soilT\",\n  Cores = 8, # only run this on 1 core\n  FileName = \"swvl1_mean_daily_Krig2.nc\", # save the finished file as this\n  Dir = Dir.krigd_var # where to save the output\n)\nreturn(xxxx$Kriging_Output)\n}\nnlayers = length(swvl1_mean_daily_stack@layers)\nswvl1_mean_daily_Krig2 = stack(lapply(X = 1:nlayers, FUN = krigR_temporal,data = swvl1_mean_daily_stack ))\nwriteCDF(rast(swvl1_mean_daily_Krig2),\n         \"data_era5/kriged/swvl1_mean_daily_Krig2.nc\",\n         overwrite=TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nd2m_mean_daily_Krig = stack(\"data_era5/kriged/d2m_mean_daily_Krig.nc\")\nt2m_mean_daily_Krig = stack(\"data_era5/kriged/t2m_mean_daily_Krig.nc\")\nt2m_min_daily_Krig = stack(\"data_era5/kriged/t2m_min_daily_Krig.nc\")\nt2m_max_daily_Krig = stack(\"data_era5/kriged/t2m_max_daily_Krig.nc\")\nsp_mean_daily_Krig = stack(\"data_era5/kriged/sp_mean_daily_Krig.nc\")\nswvl1_mean_daily_Krig = stack(\"data_era5/kriged/swvl1_mean_daily_Krig.nc\")\nstl1_mean_daily_Krig = stack(\"data_era5/kriged/stl1_mean_daily_Krig.nc\")\n```\n:::\n\n### Ploting the kingued maps (first layer)\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(2,4))\nplot(t2m_mean_daily_Krig$X1, main = \"Mean Temp\")\nplot(t2m_min_daily_Krig$X1, main = \"Min Temp\")\nplot(t2m_max_daily_Krig$X1, main = \"Max Temp\")\nplot(d2m_mean_daily_Krig$X1, main = \"Dew Point\")\nplot(sp_mean_daily_Krig$X1, main = \"Surface Pressure\")\nplot(swvl1_mean_daily_Krig$X1, main = \"Soil Moisture\")\nplot(stl1_mean_daily_Krig$X1, main = \"Soil Temp\")\n```\n\n::: {.cell-output-display}\n![](code_weather_white-mold_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\nUsing ggplot\n\n::: {.cell}\n\n```{.r .cell-code}\n# t2m_max_daily_stack\nKrigs = t2m_max_daily_stack$X1\nKrig_df <- as.data.frame(Krigs[[1]], xy = TRUE)\ncolnames(Krig_df)[3] <- \"values\"\n\nmax_t_ori = Krig_df %>% \n  filter(!is.na(values)) %>% \n  ggplot()+\n  geom_polygon(data = ny_shape1,\n              aes(x=long, y = lat, group = group),\n               fill= \"white\",\n               color = \"black\")+\n  geom_tile(aes(x, y, fill = values-273.15))+\n  geom_polygon(data = ny_shape1,\n              aes(x=long, y = lat, group = group),\n               fill= NA,\n               color = \"black\")+\n  scale_fill_viridis(option=\"B\", limits = c(5,18),breaks =seq(5, 18, by = 3))+\n  # scale_color_viridis(option=\"B\")+\n  geom_point(data = wm_data2,\n             shape = 21,\n             color = \"white\",\n             fill = \"black\",\n             aes(longitude,latitude))+\n  coord_map(xlim = c(-80,-76.8), ylim = c(41.8,43.5))+\n  labs(x = \"Longitude\",\n       y = \"Latitude\",\n       fill = \"Max Temperature (°C)\",\n       title= \"Era5 Native Resolution (0.1° x 0.1°)\")\n```\n\n::: {.cell-output-stderr}\n```\nRegions defined for each Polygons\nRegions defined for each Polygons\n```\n:::\n\n```{.r .cell-code}\n# max_t_ori\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nKrigs = t2m_max_daily_Krig$X1\nKrig_df <- as.data.frame(Krigs[[1]], xy = TRUE)\ncolnames(Krig_df)[3] <- \"values\"\n\n\n\nmax_t_krig = Krig_df %>% \n  filter(!is.na(values)) %>% \n  ggplot()+\n  geom_polygon(data = ny_shape1,\n              aes(x=long, y = lat, group = group),\n               fill= \"white\",\n               color = \"black\")+\n  geom_tile(aes(x, y, fill = values-273.15))+\n  geom_polygon(data = ny_shape1,\n              aes(x=long, y = lat, group = group),\n               fill= NA,\n               color = \"black\")+\n  scale_fill_viridis(option=\"B\", limits = c(5,18), breaks =seq(5, 18, by = 3))+\n  # scale_color_viridis(option=\"B\")+\n  geom_point(data = wm_data2,\n             shape = 21,\n             color = \"white\",\n             fill = \"black\",\n             aes(longitude,latitude))+\n  coord_map(xlim = c(-80,-76.8), ylim = c(41.8,43.5))+\n  labs(x = \"Longitude\",\n       y = \"Latitude\",\n       fill = \"Max Temperature (°C)\",\n       title= \"Era5 Kriged (0.02° x 0.02°)\")\n```\n\n::: {.cell-output-stderr}\n```\nRegions defined for each Polygons\nRegions defined for each Polygons\n```\n:::\n\n```{.r .cell-code}\nmax_t_ori + max_t_krig +\n  plot_layout(ncol = 2, guides = \"collect\") &\n  theme_map()&\n  theme(legend.position = \"bottom\",\n        legend.text = element_text(size = 9))\n```\n\n::: {.cell-output-display}\n![](code_weather_white-mold_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# ggsave(\"figs/max_t.png\",dpi=900, height = 8, width=14, bg = \"white\")\n```\n:::\n\n### Relative humidity\n\nHow to calculate relative humidity here [link](https://www.ecmwf.int/sites/default/files/elibrary/2016/17117-part-iv-physical-processes.pdf#subsection.7.4.2) and here [link](https://confluence.ecmwf.int/display/CKB/ERA-Interim%3A+documentation)\n\n$$RH = \\frac{es(d2m)}{es(t2m)}*100$$\n\n$es()$ is Saturation vapor pressure and can be calculated as\n\n$$es(T) = \\alpha_1*exp( \\alpha_3*(\\frac{T-t0}{T-\\alpha_4}))$$,\n\nwhere $T$ is the temperature, $\\alpha_1 = 611.21$, $\\alpha_2 = 17.502$, $\\alpha_3 = 32.19$.\n\nUsing these resources, I build the function to calculates RH from Temperature and dew point.\n\n::: {.cell}\n\n```{.r .cell-code}\nes =function(Temp){\nt0 = 273.16\n  \nalpha1 = 611.21\nalpha3 = 17.502\nalpha4 = 32.19\n\nalpha1*exp( alpha3*((Temp-t0)/(Temp-alpha4)))\n\n}\n\n#test\nTdp = 14+273.15\nT2m = 31+273.15\nes(Tdp)/es(T2m)*100\n```\n\n::: {.cell-output-stdout}\n```\n[1] 35.55801\n```\n:::\n:::\n\nCreating the raster object of relative humidity\n\n::: {.cell}\n\n```{.r .cell-code}\nlayer_i = 1:nlayers(d2m_mean_daily_Krig)\n\ncalculate_RH = function(i, d2m_stack, t2m_stack){\n  es(d2m_stack[[i]])/es(t2m_stack[[i]])*100\n}\n\nlist_rh = lapply(layer_i, calculate_RH, d2m_stack = d2m_mean_daily_Krig,t2m_stack= t2m_mean_daily_Krig)\n\nrh_mean_daily_Krig = brick(list_rh)\n\n\n\nwriteCDF(rast(rh_mean_daily_Krig),\n         \"data_era5/kriged/rh_mean_daily_Krig.nc\",\n         overwrite=TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrh_mean_daily_Krig = stack(\"data_era5/kriged/rh_mean_daily_Krig.nc\")\nplot(rh_mean_daily_Krig$X1, main = \"Relative Humidity\")\n```\n\n::: {.cell-output-display}\n![](code_weather_white-mold_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n## Extracting data\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_data2_uni = wm_data2 %>% \n  group_by(subject) %>% \n  slice(1L)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords<-data.frame(lon=wm_data2_uni$longitude, lat=wm_data2_uni$latitude)\ncoordinates(coords)<-c(\"lon\",\"lat\")\n```\n:::\n\n-   Dew point\n\n::: {.cell}\n\n```{.r .cell-code}\next_d2m = extract(d2m_mean_daily_Krig, coords)\ncolnames(ext_d2m) = as.character(data_era5$date)\next_d2m_coord = cbind(longitude=wm_data2_uni$longitude, \n                      latitude=wm_data2_uni$latitude,\n                      ext_d2m )\n\nd2m_mean_wm = as.data.frame(ext_d2m_coord) %>%\n  mutate(subject =wm_data2_uni$subject) %>% \n  pivot_longer(3:644,\n               values_to = \"d2m\",\n               names_to = \"date\")%>% \n  mutate(date = as.Date(date))\nd2m_mean_wm\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 241,392 × 5\n   longitude latitude subject date         d2m\n       <dbl>    <dbl>   <int> <date>     <dbl>\n 1     -77.9     42.9       1 2006-04-01  282.\n 2     -77.9     42.9       1 2006-04-02  271.\n 3     -77.9     42.9       1 2006-04-03  276.\n 4     -77.9     42.9       1 2006-04-04  270.\n 5     -77.9     42.9       1 2006-04-05  266.\n 6     -77.9     42.9       1 2006-04-06  272.\n 7     -77.9     42.9       1 2006-04-07  275.\n 8     -77.9     42.9       1 2006-04-08  268.\n 9     -77.9     42.9       1 2006-04-09  268.\n10     -77.9     42.9       1 2006-04-10  270.\n# … with 241,382 more rows\n```\n:::\n:::\n\n-   Mean Temperature\n\n::: {.cell}\n\n```{.r .cell-code}\next_t2m_mean = extract(t2m_mean_daily_Krig, coords)\ncolnames(ext_t2m_mean) = as.character(data_era5$date)\next_t2m_mean_coord = cbind(longitude=wm_data2_uni$longitude,\n                           latitude=wm_data2_uni$latitude,\n                           ext_t2m_mean)\n\nt2m_mean_wm = as.data.frame(ext_t2m_mean_coord) %>%\n  mutate(subject =wm_data2_uni$subject)%>%\n  pivot_longer(3:644,\n               values_to = \"t2m_mean\",\n               names_to = \"date\")%>% \n  mutate(date = as.Date(date))\n```\n:::\n\n-   Max Temperature\n\n::: {.cell}\n\n```{.r .cell-code}\next_t2m_max = extract(t2m_max_daily_Krig, coords)\ncolnames(ext_t2m_max) = as.character(data_era5$date)\next_t2m_max_coord = cbind(longitude=wm_data2_uni$longitude,\n                           latitude=wm_data2_uni$latitude,\n                           ext_t2m_max)\n\nt2m_max_wm = as.data.frame(ext_t2m_max_coord) %>%\n  mutate(subject =wm_data2_uni$subject)%>%\n  pivot_longer(3:644,\n               values_to = \"t2m_max\",\n               names_to = \"date\")%>% \n  mutate(date = as.Date(date))\n```\n:::\n\n-   Min Temperature\n\n::: {.cell}\n\n```{.r .cell-code}\next_t2m_min = extract(t2m_min_daily_Krig, coords)\ncolnames(ext_t2m_min) = as.character(data_era5$date)\next_t2m_min_coord = cbind(longitude=wm_data2_uni$longitude,\n                           latitude=wm_data2_uni$latitude,\n                           ext_t2m_min)\n\nt2m_min_wm = as.data.frame(ext_t2m_min_coord) %>%\n  mutate(subject =wm_data2_uni$subject)%>%\n  pivot_longer(3:644,\n               values_to = \"t2m_min\",\n               names_to = \"date\")%>% \n  mutate(date = as.Date(date))\n```\n:::\n\n-   Pressure\n\n::: {.cell}\n\n```{.r .cell-code}\next_sp = extract(sp_mean_daily_Krig, coords)\ncolnames(ext_sp) = as.character(data_era5$date)\next_sp_coord = cbind(longitude=wm_data2_uni$longitude, \n                      latitude=wm_data2_uni$latitude,\n                      ext_sp )\n\nsp_mean_wm = as.data.frame(ext_sp_coord) %>%\n  mutate(subject =wm_data2_uni$subject)%>%\n  pivot_longer(3:644,\n               values_to = \"sp\",\n               names_to = \"date\")%>% \n  mutate(date = as.Date(date))\n```\n:::\n\n-   Soil moisture\n\n::: {.cell}\n\n```{.r .cell-code}\next_sm = extract(swvl1_mean_daily_Krig, coords)\ncolnames(ext_sm) = as.character(data_era5$date)\next_sm_coord = cbind(longitude=wm_data2_uni$longitude, \n                      latitude=wm_data2_uni$latitude,\n                      ext_sm )\n\nsm_mean_wm = as.data.frame(ext_sm_coord)%>%\n  mutate(subject =wm_data2_uni$subject) %>%\n  pivot_longer(3:644,\n               values_to = \"sm\",\n               names_to = \"date\")%>% \n  mutate(date = as.Date(date))\n```\n:::\n\n-   Relative humidity\n\n::: {.cell}\n\n```{.r .cell-code}\next_rh = extract(rh_mean_daily_Krig, coords)\ncolnames(ext_rh) = as.character(data_era5$date)\next_rh_coord = cbind(longitude=wm_data2_uni$longitude,\n                     latitude=wm_data2_uni$latitude,\n                     ext_rh )\n\nrh_mean_wm = as.data.frame(ext_rh_coord)%>%\n  mutate(subject =wm_data2_uni$subject)%>%\n  pivot_longer(3:644,\n               values_to = \"rh\",\n               names_to = \"date\") %>% \n  mutate(date = as.Date(date))\n```\n:::\n\n-   Soil temperature\n\n::: {.cell}\n\n```{.r .cell-code}\next_st = extract(stl1_mean_daily_Krig, coords)\ncolnames(ext_st) = as.character(data_era5$date)\next_st_coord = cbind(longitude=wm_data2_uni$longitude,\n                     latitude=wm_data2_uni$latitude,\n                     ext_st )\n\nst_mean_wm = as.data.frame(ext_st_coord) %>% \n  mutate(subject =wm_data2_uni$subject)%>%\n  pivot_longer(3:644,\n               values_to = \"st\",\n               names_to = \"date\") %>% \n  mutate(date = as.Date(date))\n```\n:::\n\nBinding data sets\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_all_wm = d2m_mean_wm %>%\n  bind_cols(t2m_mean_wm[,5],\n            t2m_max_wm[,5],\n            t2m_min_wm[,5],\n            sp_mean_wm[,5],\n            sm_mean_wm[,5],\n            rh_mean_wm[,5],\n            st_mean_wm[,5])\nweather_all_wm\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 241,392 × 12\n   longitude latitude subject date         d2m t2m_mean t2m_max t2m_min     sp\n       <dbl>    <dbl>   <int> <date>     <dbl>    <dbl>   <dbl>   <dbl>  <dbl>\n 1     -77.9     42.9       1 2006-04-01  282.     284.    289.    281. 97567.\n 2     -77.9     42.9       1 2006-04-02  271.     279.    285.    273. 98578.\n 3     -77.9     42.9       1 2006-04-03  276.     282.    290.    277. 97387.\n 4     -77.9     42.9       1 2006-04-04  270.     277.    284.    273. 97250.\n 5     -77.9     42.9       1 2006-04-05  266.     273.    277.    270. 97416.\n 6     -77.9     42.9       1 2006-04-06  272.     276.    283.    273. 97868.\n 7     -77.9     42.9       1 2006-04-07  275.     278.    281.    275. 97193.\n 8     -77.9     42.9       1 2006-04-08  268.     274.    277.    271. 97920.\n 9     -77.9     42.9       1 2006-04-09  268.     275.    282.    270. 98859.\n10     -77.9     42.9       1 2006-04-10  270.     278.    288.    272. 99093.\n# … with 241,382 more rows, and 3 more variables: sm <dbl>, rh <dbl>, st <dbl>\n```\n:::\n:::\n\n### Saving data\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_full = weather_all_wm %>%\n  dplyr::select(-latitude, -longitude) %>% \n full_join(wm_data2, by = \"subject\") \n  \nwrite.csv(data_full, \"data_white-mold/data_model_plus_weather.csv\",row.names = F)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_full = read.csv(\"data_white-mold/data_model_plus_weather.csv\") %>% \n  mutate(date = as.Date(date),\n         sampling.date =  as.Date(sampling.date),\n         planting.date = as.Date(planting.date))\n```\n:::\n\nfilter between planting and sampling dates\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_fill_filtered = data_full %>% \n  filter(date >= (planting.date-30) & date <= sampling.date)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite.csv(data_fill_filtered, \"data_white-mold/data_model_plus_weather_filtered.csv\",row.names = F)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_fill_filtered = read.csv(\"data_white-mold/data_model_plus_weather_filtered.csv\")\n```\n:::\n\n<!-- Checking whether the filtering of the dates for each field worked -->\n\n\n\n",
    "supporting": [
      "code_weather_white-mold_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": [],
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}